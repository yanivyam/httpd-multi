#!/bin/bash
#
# httpd-multi
# Version 0.5 29.6.2010
# by Yaniv Yemini
#
# A modified version of Apache's httpd init.d script that supports
# controlling of multiple instances of Apache with different configurations.
#
# Please check http://www.macnews.co.il/mageworks/scripts/multi-apachectl/
# for the latest version of Multi-Apachectl.
#
#
###################
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# httpd        Startup script for the Apache Web Server
#
# chkconfig: - 85 15
# description: The Apache HTTP Server is an efficient and extensible  \
#             server implementing the current HTTP standards.
# processname: httpd
# pidfile: /var/log/httpd/httpd.pid
# config: /etc/sysconfig/httpd
#
### BEGIN INIT INFO
# Provides: httpd
# Required-Start: $local_fs $remote_fs $network $named
# Required-Stop: $local_fs $remote_fs $network
# Should-Start: distcache
# Short-Description: start and stop Apache HTTP Server
# Description: The Apache HTTP Server is an extensible server 
#  implementing the current HTTP standards.
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

if [ -f /etc/sysconfig/httpd ]; then
        . /etc/sysconfig/httpd
fi

# Start httpd in the C locale by default.
HTTPD_LANG=${HTTPD_LANG-"C"}

# This will prevent initlog from swallowing up a pass-phrase prompt if
# mod_ssl needs a pass-phrase from the user.
INITLOG_ARGS=""

# Set HTTPD=/usr/sbin/httpd.worker in /etc/sysconfig/httpd to use a server
# with the thread-based "worker" MPM; BE WARNED that some modules may not
# work correctly with a thread-based MPM; notably PHP will refuse to start.

httpd=${HTTPD-/usr/sbin/httpd}
prog=httpd
pidfile=${PIDFILE-/var/log/httpd/httpd}
lockfile=${LOCKFILE-/var/lock/subsys/httpd}
RETVAL=0

# Apache sites directory
APACHE_INSTANCES_BASEDIR=/usr/local/apache/sites

# Read the config direcories
if [ -d $APACHE_INSTANCES_BASEDIR ]; then
	TMP_PWD=`pwd`
	cd $APACHE_INSTANCES_BASEDIR
	APACHE_CONFDIRS=`ls .`
	cd $TMP_PWD
else
	$ECHO "Cannot find config base directory $APACHE_INSTANCES_BASEDIR"
	exit 1;
fi

# The semantics of these two functions differ from the way apachectl does
# things -- attempting to start while running is a failure, and shutdown
# when not running is also a failure.  So we just do it the way init scripts
# are expected to behave here.
start() {
        echo -n $"Starting $prog: "
        
        for s in $APACHE_CONFDIRS
        do
        	if [ -d $APACHE_INSTANCES_BASEDIR/$s ]; then
        		LANG=$HTTPD_LANG daemon --pidfile="${pidfile}-${s}.pid" $httpd -d ${APACHE_INSTANCES_BASEDIR}/${s} $OPTIONS
				RETVALi=$?
				echo -n "  $s "
				if [ $RETVALi = 0 ]; then
					touch "${lockfile}.${s}"
					echo "started"
				else
					echo "failed starting"
					if [ $RETVAL = 0 ]; then
						$RETVAL = $RETVALi;
					fi
				fi
			fi
		done
        return $RETVAL
}
stop() {
	echo -n $"Stopping $prog: "
        for s in $APACHE_CONFDIRS
        do
        	if [ -d $APACHE_INSTANCES_BASEDIR/$s ]; then
				killproc -p "${pidfile}-${s}.pid" $httpd
				RETVALi=$?
				echo -n "  $s "
				if [ $RETVALi = 0 ]; then
					rm -f "${lockfile}.${s}" "${pidfile}-${s}.pid"
					echo "stopped"
				else
					echo "failed stopping"
					if [ $RETVAL = 0 ]; then
						$RETVAL = $RETVALi;
					fi
				fi
			fi
		done
}
reload() {
	echo -n $"Reloading $prog: "
        for s in $APACHE_CONFDIRS
        do
        	if [ -d $APACHE_INSTANCES_BASEDIR/$s ]; then
				echo -n "  $s "
				killproc -p "${pidfile}-${s}.pid" $httpd -HUP
				RETVALi=$?
				if [ $RETVALi = 0 ]; then
					echo "reloaded"
				else
					echo "not reloaded"
					if [ $RETVAL = 0 ]; then
						$RETVAL = $RETVALi;
					fi
				fi
			fi
		done
	echo
}

# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  status)
        if ! test -f ${pidfile}; then
            echo $prog is stopped
            RETVAL=3
        else  
            status -p {$pidfile} $httpd
            RETVAL=$?
        fi
        ;;
  restart)
	stop
	start
	;;
  condrestart)
	if test -f ${pidfile} && status -p ${pidfile} $httpd >&/dev/null; then
		stop
		start
	fi
	;;
  reload)
        reload
	;;
  configtest)
        LANG=$HTTPD_LANG $httpd $OPTIONS -t
        RETVAL=$?
        ;;
  graceful)
        echo -n $"Gracefully restarting $prog: "
	LANG=$HTTPD_LANG $httpd $OPTIONS -k $@
	RETVAL=$?
        echo
	;;
  *)
	echo $"Usage: $prog {start|stop|restart|condrestart|reload|status|graceful|help|configtest}"
	exit 1
esac

exit $RETVAL

